{"version":3,"sources":["components/calendarDrawer/calendarStyle.module.scss","api/api.ts","store/groupListReducer.ts","store/store.ts","components/navBar/navBarDrawer.tsx","components/pages/groups/groupListDrawer.tsx","components/pages/groups/groupsListContainer.tsx","store/actions/groupListActions.ts","components/calendarDrawer/calendarDrawer.tsx","components/pages/calendarAndJornal/listenedLections.tsx","components/pages/calendarAndJornal/calendarJornalDrawer.tsx","components/pages/calendarAndJornal/calendarJornalContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/pages/calendarAndJornal/calendarJornalStyle.module.scss"],"names":["module","exports","instanceMock","axios","create","baseURL","serverAL","get","then","res","data","init","groups","id","name","avatar","startDate","endDate","groupProfile","calendar","groupId","title","date","start","mentor","userList","classification","firstName","lastName","email","phone","room","img","groupsSettings","test","reducersPush","combineReducers","groupsPart","state","action","type","store","createStore","applyMiddleware","thunk","NavBarDrawer","props","classes","makeStyles","theme","colorDefault","backgroundColor","root","height","spacing","color","fontWeight","typography","fontWeightRegular","boxShadow","shadows","emphasize","palette","grey","useStyles","AppBar","position","className","Container","fixed","Typography","variant","Breadcrumbs","aria-label","Link","href","GroupListDrawer","autoHeight","autoPageSize","rows","groupList","columns","field","headerName","width","description","onCellDoubleClick","alert","hideFooterSelectedRowCount","GroupListMainContainer","connect","getGroupsListTC","dispatch","a","groupAnswData","console","log","connector","useEffect","CalendarDrawer","eventGuid","calendarStyle","main","plugins","dayGridPlugin","interactionPlugin","initialView","weekends","editable","selectable","dayMaxEvents","select","selectInfo","prompt","calendarApi","view","unselect","addEvent","String","startStr","end","endStr","allDay","themeSystem","events","event","ListenedLections","style","lection","whoListendedNumber","CalendarAndJornalDrawer","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","React","useState","setValue","calendarJornalStyle","Paper","Tabs","onChange","newValue","Tab","label","jrn","component","display","m","bgcolor","JournalMainContainer","App","exact","from","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.2eb62aec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"calendarStyle_main__14bkm\"};","import axios from 'axios'\r\nimport { groupType} from '../store/types/storeTypes'\r\n\r\n//import { invoiceType } from '../store/types/storeTypes';\r\n//https://mockapi.io/projects/60d5f509943aa60017768d24\r\n//https://60d5f509943aa60017768d23.mockapi.io/groups\r\n\r\nconst instanceMock = axios.create({\r\n  baseURL: 'https://60d5f509943aa60017768d23.mockapi.io',\r\n})\r\n\r\ntype serverType = {\r\n  getGroupList: Function\r\n}\r\n\r\nexport const serverAL: serverType = {\r\n \r\n  getGroupList: () => {\r\n    return instanceMock.get<Array<groupType>>('/groups').then((res) => {\r\n      return res.data\r\n    })\r\n  },\r\n}\r\n","import { mainGroupListType, getActionTypes } from './types/storeTypes'\r\n\r\nimport * as actions from './actions/groupListActions'\r\nimport { Dispatch } from 'react'\r\nimport { serverAL } from '../api/api'\r\n\r\n\r\n\r\ntype GroupsActionTypes = ReturnType<getActionTypes<typeof actions>>\r\n\r\nconst init: mainGroupListType = {\r\n  groups: [\r\n    {\r\n      id: 'load',\r\n      name: 'bor',\r\n      avatar: 'link',\r\n      startDate: 'load',\r\n      endDate: 'load',\r\n      groupProfile: 'load',\r\n      calendar: [\r\n        {\r\n          id: '1',\r\n          groupId: '1',\r\n          title: 'Lection1',\r\n          date: '2021-06-07',\r\n          start: '2021-06-07T16:10:00'\r\n        },\r\n        {\r\n          id: '2',\r\n          groupId: '1',\r\n          title: 'Lection2',\r\n          date: '2021-06-01',\r\n          start: '2021-06-01T15:20:00'\r\n        }\r\n      ],\r\n\r\n      mentor: 'load',\r\n      userList: [\r\n        {\r\n          id: 'load',\r\n          classification: 'intern',\r\n          firstName: 'string',\r\n          lastName: 'string',\r\n          email: 'string',\r\n          phone: 'string',\r\n          room: 'string',\r\n          img: 'pick',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  groupsSettings: {\r\n    test: 'load',\r\n  },\r\n}\r\n// ========================================\r\n//\r\nexport function groupsListReducer(\r\n  state: mainGroupListType = init,\r\n  action: GroupsActionTypes\r\n): mainGroupListType {\r\n  switch (action.type) {\r\n    // --------------\r\n\r\n    case 'SET-GROUPS-LIST/group-list-type': {\r\n      return {\r\n        ...state,\r\n        groups: [...action.data],\r\n      }\r\n    }\r\n\r\n    // --------------\r\n    default:\r\n      return state\r\n  }\r\n}\r\n// ========================================\r\n\r\n// ========================================\r\nexport const getGroupsListTC =\r\n  () => async (dispatch: Dispatch<GroupsActionTypes>) => {\r\n    try {\r\n      const groupAnswData = await serverAL.getGroupList()\r\n\r\n      dispatch(actions.setGroupList(groupAnswData))\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\n\r\nimport thunk from 'redux-thunk' //thunk middleware\r\nimport { groupsListReducer } from './groupListReducer'\r\n\r\nconst reducersPush = combineReducers({\r\n  groupsPart: groupsListReducer,\r\n \r\n})\r\n\r\nexport type globalStateType = ReturnType<typeof reducersPush>\r\n\r\nconst store = createStore(reducersPush, applyMiddleware(thunk))\r\nexport default store\r\n","\r\nimport { AppBar, Container, Typography, Breadcrumbs, Link } from '@material-ui/core';\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\n\r\nexport function NavBarDrawer(props: any) {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    colorDefault: {\r\n     \r\n        backgroundColor: 'black',    \r\n    },\r\n    root: {\r\n      height: theme.spacing(3),\r\n      color: 'white',\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      '&:hover, &:focus': {\r\n       color: 'orange',\r\n      },\r\n      '&:active': {\r\n        boxShadow: theme.shadows[1],\r\n        backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n      },\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <AppBar position='static' className={classes.colorDefault}>\r\n      <Container fixed>\r\n        <Typography variant='h6'>  Intern management System</Typography>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link color=\"secondary\" href=\"#groups\"  className={classes.root}>\r\n            Groups\r\n          </Link>\r\n          <Link color=\"secondary\" href=\"#journal\" className={classes.root}>\r\n            Journal\r\n          </Link>\r\n          <Link color=\"secondary\" href=\"#did\" className={classes.root}>\r\n            Functional\r\n          </Link>\r\n        </Breadcrumbs>\r\n\r\n      </Container>\r\n    </AppBar>\r\n  )\r\n}","\r\nimport { groupListConectedType } from \"./groupsListContainer\";\r\n\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GridColDef } from \"@material-ui/data-grid\";\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nexport const GroupListDrawer = (props: groupListConectedType) => {\r\n\r\n\r\n\r\n\r\n  const columns: GridColDef[] = [\r\n    { field: 'name', headerName: 'Group name', width: 160 },\r\n    {\r\n      field: 'mentor',\r\n      headerName: 'Mentor',\r\n      description:\r\n        'Name of the mentor.',\r\n      width: 160,\r\n\r\n    },\r\n    {\r\n      field: 'startDate',\r\n      headerName: 'Start Date',\r\n      type: 'dateTime',\r\n      width: 160,\r\n    },\r\n    {\r\n      field: 'endDate',\r\n      headerName: 'End Date',\r\n      type: 'dateTime',\r\n      width: 160,\r\n    },\r\n    {\r\n      field: 'groupProfile',\r\n      headerName: 'Сourse',\r\n      description: 'Course of groups',\r\n      width: 160,\r\n    },\r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      '& .MuiDataGrid-columnHeaderWrapper': {\r\n        backgroundColor: 'rgb(255, 145, 77)',\r\n      },\r\n      '& .MuiDataGrid-selectedRowCount': {\r\n        color: 'rgba(255, 7, 0, 0.55)',\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <DataGrid\r\n        className={classes.root}\r\n        autoHeight={true}\r\n        autoPageSize={true}\r\n        rows={props.groupList}\r\n        columns={columns}\r\n        onCellDoubleClick={() => alert(1)}\r\n        hideFooterSelectedRowCount={true}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n","import { useEffect } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getGroupsListTC } from \"../../../store/groupListReducer\";\r\n\r\nimport { globalStateType } from \"../../../store/store\";\r\nimport { GroupListDrawer } from \"./groupListDrawer\";\r\n\r\nconst mapStateToProps = (state: globalStateType) => {\r\n  return {\r\n    groupList: state.groupsPart.groups,\r\n  }\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { getGroupsListTC })\r\nexport type groupListConectedType = ConnectedProps<typeof connector>\r\n\r\nfunction GroupListCC(props: groupListConectedType) {\r\n\r\n  useEffect(() => {\r\n    props.getGroupsListTC();\r\n  }, []);\r\n\r\n\r\n\r\n  return <GroupListDrawer {...props} />;\r\n}\r\n\r\n// ========================================\r\n\r\n\r\nexport const GroupListMainContainer = connector(GroupListCC);\r\n\r\n\r\n","import { groupType } from \"../types/storeTypes\";\r\n\r\n\r\nexport const setGroupList = (data:Array <groupType>) => ({\r\n  type: 'SET-GROUPS-LIST/group-list-type',\r\n  data\r\n}as const)\r\n// --------------\r\n\r\n","\r\nimport FullCalendar, { DatePointApi, DateSelectArg } from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\n\r\nimport interactionPlugin from \"@fullcalendar/interaction\"\r\n\r\nimport calendarStyle from \"./calendarStyle.module.scss\";\r\n\r\n//<CalendarDrawer event={eventEmulator} \r\nexport function CalendarDrawer(props: any) {\r\n  let eventGuid = 0;\r\n\r\n  function createEventId() {\r\n    return String(eventGuid++);\r\n  }\r\n\r\n  const handleDateSelect = (selectInfo: DateSelectArg) => {\r\n    const title = prompt('Please enter a new title for your event');\r\n    const calendarApi = selectInfo.view.calendar;\r\n\r\n    calendarApi.unselect(); // clear date selection\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        allDay: selectInfo.allDay\r\n      });\r\n    }\r\n  }\r\n\r\n  /*  const handleDateClick = (arg: DatePointApi) => { \r\n     alert(arg.dateStr)\r\n   } */\r\n  return (\r\n    <div className={calendarStyle.main}>\r\n \r\n      \r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        weekends={false}\r\n        editable={true}\r\n        selectable={true}\r\n        dayMaxEvents={true}\r\n        select={handleDateSelect}\r\n        themeSystem={'bootstrap'}\r\n        height = {650}\r\n        \r\n        \r\n        events={props.event}\r\n      />\r\n    </div>\r\n  )\r\n}","\r\n\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GridColDef } from \"@material-ui/data-grid\";\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nexport const ListenedLections = (props: any) => {\r\n\r\n  const rows = [\r\n    { id:1,\r\n      lection: 'java',\r\n      mentor: 'Rawrs',\r\n      whoListendedNumber: 3\r\n    },\r\n    {id:2,\r\n      lection: 'c++',\r\n      mentor: 'ASDAS',\r\n      whoListendedNumber: 2\r\n    },\r\n    { id:3,\r\n      lection: 'js',\r\n      mentor: 'asdfsad',\r\n      whoListendedNumber: 7\r\n    },\r\n    { id:4,\r\n      lection: 'asm',\r\n      mentor: 'zxcvzxcv',\r\n      whoListendedNumber: 1\r\n    },\r\n    { id:5,\r\n      lection: 'python',\r\n      mentor: 'asdfsad',\r\n      whoListendedNumber: 5\r\n    },\r\n    { id:6,\r\n      lection: 'java',\r\n      mentor: 'asdfsasdasad',\r\n      whoListendedNumber: 6\r\n    },\r\n\r\n  ]\r\n\r\n\r\n  const columns: GridColDef[] = [\r\n    { field: 'lection', headerName: 'Lection Name', width: 130 },\r\n    {\r\n      field: 'mentor',\r\n      headerName: 'Mentor',\r\n      description:\r\n        'Name of the mentor.',\r\n      width: 150,\r\n    },\r\n    {\r\n      field: 'whoListendedNumber',\r\n      headerName: 'Listened number',\r\n      description:\r\n        'Number of interns who listened this lection',\r\n      width: 80,\r\n    },\r\n\r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      '& .MuiDataGrid-columnHeaderWrapper': {\r\n        backgroundColor: 'rgb(255, 145, 77)',\r\n      },\r\n      '& .MuiDataGrid-selectedRowCount': {\r\n        color: 'rgba(255, 7, 0, 0.55)',\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div style={{ width: 370 }}>\r\n\r\n      <DataGrid\r\n        className={classes.root}\r\n        autoHeight={true}\r\n        rows={rows}\r\n        columns={columns}\r\n        onCellDoubleClick={() => alert(1)}\r\n        hideFooterSelectedRowCount={true}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nimport calendarJornalStyle from \"./calendarJornalStyle.module.scss\";\r\nimport { CalendarDrawer } from \"../../calendarDrawer/calendarDrawer\";\r\nimport { groupListConectedType } from \"../groups/groupsListContainer\";\r\nimport React from 'react';\r\nimport { ListenedLections } from './listenedLections';\r\n\r\n\r\nexport const CalendarAndJornalDrawer = (props: groupListConectedType) => {\r\n\r\n  function TabPanel(props: any) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`tabPanelIndex${index}`}\r\n        aria-labelledby={`tabIndex${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\n  function a11yProps(index: any) {\r\n    return {\r\n      id: `tabIndex${index}`,\r\n      'aria-controls': `tabPanelIndex${index}`,\r\n    };\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTabs-root': {\r\n        backgroundColor: 'rgb(255, 145, 77)',\r\n      },\r\n      '& .MuiTabs-indicator': {\r\n        backgroundColor: 'black',\r\n      },\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: any, newValue: any) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={calendarJornalStyle.main}>\r\n\r\n\r\n      <div className={classes.root}>\r\n        <Paper className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"group tabs\">\r\n              <Tab label=\"Calendar\" {...a11yProps(0)} />\r\n              <Tab label=\"Journal\" {...a11yProps(1)} />\r\n              <Tab label=\"Group List\" {...a11yProps(2)} />\r\n            </Tabs>\r\n\r\n          </AppBar>\r\n\r\n          <TabPanel value={value} index={0}>\r\n          <div className={calendarJornalStyle.jrn}>\r\n          <Box component=\"div\" display=\"inline\" p={5} m={1} bgcolor=\"background.paper\">\r\n          <ListenedLections />\r\n      </Box>\r\n      <Box component=\"div\" display=\"inline\" p={1} m={1} bgcolor=\"background.paper\">\r\n      <CalendarDrawer event={props.groupList[0].calendar} />\r\n      </Box>\r\n</div>\r\n          {/*  <span className={calendarJornalStyle.jrn}>   </span> */}\r\n\r\n           \r\n\r\n\r\n           \r\n\r\n          \r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            Journal\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            Group List\r\n          </TabPanel>\r\n        </Paper>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n","import { useEffect } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nimport { globalStateType } from \"../../../store/store\";\r\nimport { groupListConectedType } from \"../groups/groupsListContainer\";\r\nimport { CalendarAndJornalDrawer } from \"./calendarJornalDrawer\";\r\n\r\nconst mapStateToProps = (state: globalStateType) => {\r\n  return {\r\n    groupList: state.groupsPart.groups,\r\n  }\r\n};\r\n\r\nconst connector = connect(mapStateToProps, {})\r\n\r\nfunction GroupListCC(props: groupListConectedType) {\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n\r\n\r\n  return <CalendarAndJornalDrawer {...props} />;\r\n}\r\n\r\n// ========================================\r\n\r\n\r\nexport const JournalMainContainer = connector(GroupListCC);\r\n\r\n\r\n","import \"./App.css\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport { NavBarDrawer } from \"./components/navBar/navBarDrawer\";\r\nimport { GroupListMainContainer } from \"./components/pages/groups/groupsListContainer\";\r\nimport { JournalMainContainer } from \"./components/pages/calendarAndJornal/calendarJornalContainer\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <NavBarDrawer />\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to=\"/groups\" />\r\n\r\n\r\n        <Route path=\"/groups\" component={GroupListMainContainer} />\r\n        <Route path=\"/journal\" component={JournalMainContainer} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n    <CssBaseline />\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"calendarJornalStyle_main__D8LH0\",\"calendarTab\":\"calendarJornalStyle_calendarTab__2EZX4\",\"jrn\":\"calendarJornalStyle_jrn__WW1Pj\"};"],"sourceRoot":""}